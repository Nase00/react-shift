{"version":3,"sources":["react-shift.js"],"names":[],"mappings":"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","file":"react-shift.js","sourcesContent":["/* eslint react/no-did-mount-set-state:0 */\nimport React, { Component, PropTypes } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport Arrow from './arrow';\nimport Pagination from './pagination';\n\nimport touchHandler from './touch-handler';\n\nclass ReactShift extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      pageCount: 0\n    };\n\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.setPage = this.setPage.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.handleTouch = this.handleTouch.bind(this);\n  }\n\n  componentWillMount() {\n    // TODO move this out of componentDidMount\n    const { children, scrollable } = this.props;\n\n    this.setState({\n      pageCount: children.length - 1,\n      scrollable\n    });\n  }\n\n  next() {\n    const { page, pageCount } = this.state;\n\n    if (page !== pageCount) {\n      this.setState({ page: page + 1 });\n    }\n  }\n\n  previous() {\n    const { page } = this.state;\n\n    if (page !== 0) {\n      this.setState({ page: page - 1 });\n    }\n  }\n\n  setPage(n) {\n    this.setState({ page: n });\n  }\n\n  handleWheel(e) {\n    const { scrollable } = this.props;\n\n    if (scrollable) {\n      if (e.deltaY > 0) {\n        this.next();\n      } else {\n        this.previous();\n      }\n    }\n  }\n\n  handleTouch(e) {\n    const { next, previous } = this;\n\n    touchHandler(\n      e.changedTouches[0].pageX,\n      next,\n      previous\n    );\n  }\n\n  render() {\n    const { fastLinks,\n            fakeLinks,\n            arrowLabels,\n            transitions,\n            children,\n            classes,\n            styles } = this.props;\n    const { page, pageCount } = this.state;\n\n    const filler = (\n      <a\n        className={classes.arrowFiller || classes.navArrow}\n        style={styles.arrowFiller || styles.navArrow}>\n        {String.fromCharCode('\\u00a0')}\n      </a>\n    );\n\n    const leftArrow = page === 0 ? filler : (\n      <Arrow\n        className={classes.previousPage}\n        style={styles.previousPage}\n        label={arrowLabels.previous}\n        fakeLink={fakeLinks}\n        onClick={this.previous}/>\n    );\n\n    const rightArrow = page === pageCount ? filler : (\n      <Arrow\n        className={classes.nextPage}\n        style={styles.nextPage}\n        label={arrowLabels.next}\n        fakeLink={fakeLinks}\n        onClick={this.next}/>\n    );\n\n    const pagination = (\n      <Pagination\n        onClick={this.setPage}\n        page={page}\n        pageCount={pageCount}\n        {...this.props}/>\n    );\n\n    const fastLinksList = fastLinks ? (\n      <div>\n        {Object.keys(fastLinks).map((i, v) => {\n          return (\n            <a\n              key={`fastLink-${i}`}\n              className={classes.fastLinks}\n              style={styles.faskLinks}\n              href={fakeLinks ? '#' : null}\n              onClick={this.setPage.bind(null, fastLinks[i])}>\n                {Object.keys(fastLinks)[v]}\n            </a>\n          );\n        })}\n      </div>\n    ) : null;\n\n    return (\n      <div\n        key='react-shift'\n        className={classes.wrapper}\n        style={styles.wrapper}\n        onWheelCapture={this.handleWheel}\n        onTouchMove={this.handconstouch}>\n        <div\n          className={classes.page}\n          style={styles.page}>\n            {transitions ?\n              <ReactCSSTransitionGroup\n                transitionEnterTimeout={300}\n                transitionLeaveTimeout={300}\n                transitionName={transitions.name}>\n                  {children[page]}\n              </ReactCSSTransitionGroup>\n            : children[page]}\n        </div>\n        <nav\n          className={classes.navigation}\n          style={styles.navigation}>\n            {fastLinksList}\n            {leftArrow} {pagination} {rightArrow}\n        </nav>\n      </div>\n    );\n  }\n}\n\nReactShift.propTypes = {\n  children: PropTypes.node.isRequired,\n  classes: PropTypes.shape({\n    wrapper: PropTypes.string,\n    navigation: PropTypes.string,\n    page: PropTypes.string,\n    pagination: PropTypes.string,\n    pageNumber: PropTypes.string,\n    currentPage: PropTypes.string,\n    fastLinks: PropTypes.string,\n    navArrow: PropTypes.string,\n    nextPage: PropTypes.string,\n    previousPage: PropTypes.string,\n    arrowFiller: PropTypes.string\n  }),\n  styles: PropTypes.shape({\n    wrapper: PropTypes.object,\n    navigation: PropTypes.object,\n    page: PropTypes.object,\n    pagination: PropTypes.object,\n    pageNumber: PropTypes.object,\n    currentPage: PropTypes.object,\n    fastLinks: PropTypes.object,\n    navArrow: PropTypes.object,\n    nextPage: PropTypes.object,\n    previousPage: PropTypes.object,\n    arrowFiller: PropTypes.object\n  }),\n  arrowLabels: PropTypes.shape({\n    className: PropTypes.string,\n    next: PropTypes.string,\n    previous: PropTypes.string\n  }),\n  fastLinks: PropTypes.object,\n  fakeLinks: PropTypes.bool,\n  transitions: PropTypes.shape({\n    active: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  scrollable: PropTypes.bool\n};\n\nReactShift.defaultProps = {\n  classes: {},\n  styles: {},\n  arrowLabels: {\n    next: 'Next page',\n    previous: 'Previous page'\n  },\n  fakeLinks: true,\n  // TODO: Fix scrolling problems on mobile devices\n  scrollable: false\n};\n\nexport default ReactShift;\n"],"sourceRoot":"/source/"}